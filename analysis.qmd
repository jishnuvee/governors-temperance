---
title: "Temperance and Governors"
execute: 
  echo: false
---

```{r}
#| label: setup
#| message: false

library(tidyverse)
library(gt)
library(primer.data)
library(tidymodels)
library(broom)
library(marginaleffects)

# Filter the data to make the assumptions of stability and unconfoundedness more reasonable.

x <- governors |>
  mutate(election_result = ifelse(win_margin > 0, "Win", "Lose")) |>
  filter(abs(win_margin) <= 5, year > 1945)

# Fit a model. This is our data generating mechanism.

fit_causal <- linear_reg() |>
  fit(lived_after ~ election_result + win_margin + election_age + party, data = x)
```

### Background

2) Imagine you are a researcher. You want to know if winning candidates live longer. 

```{r}
tribble(
  ~`Candidate`, ~`Years Lived (Lose)`, ~`Years Lived (Win)`, ~`Election Result`, ~`Age`, ~`Win Margin`, ~`Party`, ~`Sex`, ~`Other`,
  "Joe Smith",        "18*",   "23",   "Win",  "56", "7.2",  "Republican", "Male", "...",
  "David Jones",     "22",    "28*",  "Lose", "48", "-3.5",  "Democrat",   "Male", "...",
  "...",               "..." , "..." , "..." , "..." , "..." ,  "..." , "..." , "..."
) |>
  gt() |>
  tab_header(title = "Preceptor Table") |>
  tab_spanner(label = "Potential Outcomes", columns = c(`Years Lived (Lose)`, `Years Lived (Win)`)) |>
  tab_spanner(label = "Treatment", columns = c(`Election Result`)) |>
  tab_spanner(label = "Covariates", columns = c(`Age`, `Win Margin`, `Party`, `Sex`, `Other`)) |>
  cols_align(align = "center", columns = everything()) |>
  cols_align(align = "left", columns = c(`Candidate`)) |>
  fmt_markdown(columns = everything()) |>
  tab_footnote(
    footnote = md("Each row is a candidate running for election in 2025."),
    locations = cells_column_labels(columns = `Candidate`)
  ) |>
  tab_footnote(
    footnote = md("A * indicates a potential outcome that is not observed."),
    locations = cells_column_spanners(spanners = "Potential Outcomes")
  ) |>
  tab_footnote(
    footnote = md("Years lived: Years lived after election, for both possible election results."),
    locations = cells_column_spanners(spanners = "Potential Outcomes")
  ) |>
  tab_footnote(
    footnote = md("Other = additional covariates not listed here."),
    locations = cells_column_labels(columns = `Other`)
  )
```

```{r}
tribble(
  ~`Source`, ~`Candidate`, ~`Year`, ~`Years Lived (Lose)`, ~`Years Lived (Win)`, ~`Election Result`, ~`Win Margin`, ~`Age`, ~`Party`, ~`Sex`, ~`Other`,
   "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...",
   "Data", "Earl Warren",  "1946", "18*", "23", "Win", "7.2", "56",  "Republican", "Male", "...",
   "Data", "George Wallace", "1946", "22", "28*", "Lose", "-3.5", "48", "Democrat", "Male", "...",
   "Data", "Nelson Rockefeller", "1946", "14*", "17", "Win", "9.0", "54",  "Republican", "Male", "...",
   "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", "...", 
   "Preceptor Table", "Joe Smith",  "2025",      "18*",   "23",   "Win",  "56", "7.2",  "Republican", "Male", "...",
     "Preceptor Table",  "David Jones",  "2025",    "22",    "28*",  "Lose", "48", "-3.5",  "Democrat",   "Male", "...",
   "...", "...", "...", "...", "...", "...", "...", "...", "...", "...",  "..."
) |>
  gt() |>
  tab_header(title = "Population Table") |>
  tab_spanner(label = "Unit/Time", columns = c(`Candidate`, `Year`)) |>
  tab_spanner(label = "Potential Outcomes", columns = c(`Years Lived (Lose)`, `Years Lived (Win)`)) |>
  tab_spanner(label = "Treatment", columns = c(`Election Result`)) |>
  tab_spanner(label = "Covariates", columns = c(`Win Margin`, `Age`,  `Party`, `Sex`, `Other`)) |>
  cols_align(align = "center", columns = everything()) |>
  cols_align(align = "left", columns = c(`Source`)) |>
  fmt_markdown(columns = everything()) |>
  tab_footnote(
    footnote = md("A * indicates a potential outcome that is not observed."),
    locations = cells_column_spanners(spanners = "Potential Outcomes")
  ) |>
  tab_footnote(
    footnote = md("Years lived: Number of years lived after election for both possible outcomes."),
    locations = cells_column_spanners(spanners = "Potential Outcomes")
  ) |>
  tab_footnote(
    footnote = md("Other = additional covariates not listed here. Age is at election."),
    locations = cells_column_spanners(spanners = "Covariates")
  )
```

## DGM

* Take a look at our fitted model. Use `tidy()` to examine the confidence intervals of the parameters. Are they any changes we might consider making?

```{r}
fit_causal |>
  tidy(conf.int = TRUE)

```


We should ignore the 3rd party b/cuz the conf.int crosses zero - keep model as is 

* Use AI to create a nice looking table of the parameter values. (Only work on this question if your group is going very fast and has extra time.)



```{r}
library(broom)       # for tidy()
library(knitr)       # for kable()
library(kableExtra)  # for styling

# Tidy model output with confidence intervals
tbl <- fit_causal |>
  tidy(conf.int = TRUE)

# Create LaTeX table
tbl |>
  mutate(
    term = recode(term,
                  "(Intercept)" = "Intercept",
                  "election_resultWin" = "Election Result (Win)",
                  "win_margin" = "Win Margin",
                  "election_age" = "Election Age",
                  "partyRepublican" = "Party (Republican)",
                  "partyThird party" = "Party (Third Party)"),
    p.value = ifelse(p.value < 0.001, "<0.001",
                     sprintf("%.3f", p.value))
  ) |>
  kable(format = "latex", booktabs = TRUE,
        col.names = c("Term", "Estimate", "Std. Error",
                      "t-Statistic", "p-Value",
                      "95% CI Low", "95% CI High"),
        digits = 3,
        caption = "Linear Regression Parameter Estimates") |>
  kable_styling(latex_options = c("hold_position", "striped", "scale_down"))

```

* Use AI to create LaTeX code for our DGM. (Only work on this question if your group is going very fast and has extra time.)


$$
\text{lived\_after}_i =
67.5647
+ 8.6345 \cdot \text{election\_resultWin}_i
- 1.4598 \cdot \text{win\_margin}_i
- 0.8869 \cdot \text{election\_age}_i
+ 4.0386 \cdot \text{partyRepublican}_i
- 9.5035 \cdot \text{partyThirdParty}_i
+ \varepsilon_i
$$






## Questions and Answers

Recall our original question: Do winning candidates live longer? Well, do they? And do other candidate characteristics matter?

Yes wining candidates, live longer. 


* First, let's look at individual variables which are included in our DGM. Hint: Use `plot_predictions()`


Republicans live longer and data is scattered for ThirdParty

Election_age and lived_after have an inverse or negative relationship. 

```{r}
fit_causal |>
  predictions() 

```


```{r}
fit_causal |>
  plot_predictions(condition = c("party")) 

```
```{r}
fit_causal |>
  plot_predictions(condition = c("election_age")) 

```

connect the results of each plot to the parameters in the DGM 


# basically means that election_age has a neg corre;lation so neg intrcept , since republican live longer should-ve seen positive intercept 

# graph matches tibble of conf.int 

* Second, combine several variables --- and think about which ones you should select --- into a nice looking plot. There is no wrong answer! But some plots look better than others.


```{r}
fit_causal |>
  plot_predictions(condition = c("election_result", "election_age", "party")) 


# best odds = Republican + younger-age (election_age = 32) + winning election 
```



* If there is time, use the `draw = FALSE` option to `plot_predictions()` to pull out the raw data. Then, tell an AI about that tibble and ask for some nice ggplot code. Pay special attention to the subtitle.


```{r}
fit_causal |>
  plot_predictions(condition = c("election_result", "election_age", "party"), draw = FALSE) 

```

Subtitle = "Model Predictiosn by candidate party, age, and win/loss outcome" - considering all the factors

```{r}
library(ggplot2)
library(dplyr)

# Ensure election_age is numeric
preds <- fit_causal |> 
  plot_predictions(condition = c("election_result", "election_age", "party"), draw = FALSE) |>
  mutate(
    election_age = as.numeric(election_age),  # Ensure age is numeric
    party = factor(party),
    election_result = factor(election_result)
  )

# Plot predictions
ggplot(preds, aes(x = election_age, y = estimate, color = party)) +
  geom_line(aes(linetype = election_result), size = 1) +
  geom_ribbon(
    aes(ymin = conf.low, ymax = conf.high, fill = party),
    alpha = 0.2, color = NA
  ) +
  labs(
    title = "Predicted Lifespan After Election",
    subtitle = "Model predictions by candidate party, age, and win/loss outcome",
    x = "Candidate Age at Time of Election",
    y = "Predicted Years Lived After Election",
    color = "Party",
    fill = "Party",
    linetype = "Election Result"
  )
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "bottom",
    strip.text = element_text(face = "bold")
  )
```

## Humility

* What is, truly, your best guess as to the causal effect of winning an election on longevity?

```{r}
fit_causal |>
  plot_predictions(condition = c("election_result", "election_age", "party")) 


# best odds = Republican + younger-age (election_age = 32) + winning election 
```


So the causal effect of winning an election on longevity is Republican + younger-age (election_age = 32) + winning election 




